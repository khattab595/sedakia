// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'login_dto.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

LoginDto _$LoginDtoFromJson(Map<String, dynamic> json) => LoginDto(
      token: json['token'] as String?,
      userObj: json['user_obj'] == null
          ? null
          : UserObj.fromJson(json['user_obj'] as Map<String, dynamic>),
      siteData: json['site_data'] == null
          ? null
          : SiteData.fromJson(json['site_data'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$LoginDtoToJson(LoginDto instance) => <String, dynamic>{
      'token': instance.token,
      'user_obj': instance.userObj,
      'site_data': instance.siteData,
    };

UserObj _$UserObjFromJson(Map<String, dynamic> json) => UserObj(
      data: json['data'] == null
          ? null
          : Data.fromJson(json['data'] as Map<String, dynamic>),
      ID: json['ID'] as int?,
      caps: json['caps'] == null
          ? null
          : Caps.fromJson(json['caps'] as Map<String, dynamic>),
      capKey: json['cap_key'] as String?,
      roles:
          (json['roles'] as List<dynamic>?)?.map((e) => e as String).toList(),
      allcaps: json['allcaps'] == null
          ? null
          : Allcaps.fromJson(json['allcaps'] as Map<String, dynamic>),
      filter: json['filter'] as String?,
    );

Map<String, dynamic> _$UserObjToJson(UserObj instance) => <String, dynamic>{
      'data': instance.data,
      'ID': instance.ID,
      'caps': instance.caps,
      'cap_key': instance.capKey,
      'roles': instance.roles,
      'allcaps': instance.allcaps,
      'filter': instance.filter,
    };

Data _$DataFromJson(Map<String, dynamic> json) => Data(
      ID: json['ID'] as String?,
      userLogin: json['user_login'] as String?,
      userPass: json['user_pass'] as String?,
      userNicename: json['user_nicename'] as String?,
      userEmail: json['user_email'] as String?,
      userUrl: json['user_url'] as String?,
      userRegistered: json['user_registered'] as String?,
      userActivationKey: json['user_activation_key'] as String?,
      userStatus: json['user_status'] as String?,
      displayName: json['display_name'] as String?,
      spam: json['spam'] as String?,
      deleted: json['deleted'] as String?,
    );

Map<String, dynamic> _$DataToJson(Data instance) => <String, dynamic>{
      'ID': instance.ID,
      'user_login': instance.userLogin,
      'user_pass': instance.userPass,
      'user_nicename': instance.userNicename,
      'user_email': instance.userEmail,
      'user_url': instance.userUrl,
      'user_registered': instance.userRegistered,
      'user_activation_key': instance.userActivationKey,
      'user_status': instance.userStatus,
      'display_name': instance.displayName,
      'spam': instance.spam,
      'deleted': instance.deleted,
    };

Caps _$CapsFromJson(Map<String, dynamic> json) => Caps(
      administrator: json['administrator'] as bool?,
    );

Map<String, dynamic> _$CapsToJson(Caps instance) => <String, dynamic>{
      'administrator': instance.administrator,
    };

Allcaps _$AllcapsFromJson(Map<String, dynamic> json) => Allcaps(
      switchThemes: json['switch_themes'] as bool?,
      editThemes: json['edit_themes'] as bool?,
      activatePlugins: json['activate_plugins'] as bool?,
      editPlugins: json['edit_plugins'] as bool?,
      editUsers: json['edit_users'] as bool?,
      editFiles: json['edit_files'] as bool?,
      manageOptions: json['manage_options'] as bool?,
      moderateComments: json['moderate_comments'] as bool?,
      manageCategories: json['manage_categories'] as bool?,
      manageLinks: json['manage_links'] as bool?,
      uploadFiles: json['upload_files'] as bool?,
      import: json['import'] as bool?,
      unfilteredHtml: json['unfiltered_html'] as bool?,
      editPosts: json['edit_posts'] as bool?,
      editOthersPosts: json['edit_others_posts'] as bool?,
      editPublishedPosts: json['edit_published_posts'] as bool?,
      publishPosts: json['publish_posts'] as bool?,
      editPages: json['edit_pages'] as bool?,
      read: json['read'] as bool?,
      level_10: json['level_10'] as bool?,
      level_9: json['level_9'] as bool?,
      level_8: json['level_8'] as bool?,
      level_7: json['level_7'] as bool?,
      level_6: json['level_6'] as bool?,
      level_5: json['level_5'] as bool?,
      level_4: json['level_4'] as bool?,
      level_3: json['level_3'] as bool?,
      level_2: json['level_2'] as bool?,
      level_1: json['level_1'] as bool?,
      level_0: json['level_0'] as bool?,
      editOthersPages: json['edit_others_pages'] as bool?,
      editPublishedPages: json['edit_published_pages'] as bool?,
      publishPages: json['publish_pages'] as bool?,
      deletePages: json['delete_pages'] as bool?,
      deleteOthersPages: json['delete_others_pages'] as bool?,
      deletePublishedPages: json['delete_published_pages'] as bool?,
      deletePosts: json['delete_posts'] as bool?,
      deleteOthersPosts: json['delete_others_posts'] as bool?,
      deletePublishedPosts: json['delete_published_posts'] as bool?,
      deletePrivatePosts: json['delete_private_posts'] as bool?,
      editPrivatePosts: json['edit_private_posts'] as bool?,
      readPrivatePosts: json['read_private_posts'] as bool?,
      deletePrivatePages: json['delete_private_pages'] as bool?,
      editPrivatePages: json['edit_private_pages'] as bool?,
      readPrivatePages: json['read_private_pages'] as bool?,
      deleteUsers: json['delete_users'] as bool?,
      createUsers: json['create_users'] as bool?,
      unfilteredUpload: json['unfiltered_upload'] as bool?,
      editDashboard: json['edit_dashboard'] as bool?,
      updatePlugins: json['update_plugins'] as bool?,
      deletePlugins: json['delete_plugins'] as bool?,
      installPlugins: json['install_plugins'] as bool?,
      updateThemes: json['update_themes'] as bool?,
      installThemes: json['install_themes'] as bool?,
      updateCore: json['update_core'] as bool?,
      listUsers: json['list_users'] as bool?,
      removeUsers: json['remove_users'] as bool?,
      promoteUsers: json['promote_users'] as bool?,
      editThemeOptions: json['edit_theme_options'] as bool?,
      deleteThemes: json['delete_themes'] as bool?,
      export: json['export'] as bool?,
      manageWoocommerce: json['manage_woocommerce'] as bool?,
      viewWoocommerceReports: json['view_woocommerce_reports'] as bool?,
      editProduct: json['edit_product'] as bool?,
      readProduct: json['read_product'] as bool?,
      deleteProduct: json['delete_product'] as bool?,
      editProducts: json['edit_products'] as bool?,
      editOthersProducts: json['edit_others_products'] as bool?,
      publishProducts: json['publish_products'] as bool?,
      readPrivateProducts: json['read_private_products'] as bool?,
      deleteProducts: json['delete_products'] as bool?,
      deletePrivateProducts: json['delete_private_products'] as bool?,
      deletePublishedProducts: json['delete_published_products'] as bool?,
      deleteOthersProducts: json['delete_others_products'] as bool?,
      editPrivateProducts: json['edit_private_products'] as bool?,
      editPublishedProducts: json['edit_published_products'] as bool?,
      manageProductTerms: json['manage_product_terms'] as bool?,
      editProductTerms: json['edit_product_terms'] as bool?,
      deleteProductTerms: json['delete_product_terms'] as bool?,
      assignProductTerms: json['assign_product_terms'] as bool?,
      editShopOrder: json['edit_shop_order'] as bool?,
      readShopOrder: json['read_shop_order'] as bool?,
      deleteShopOrder: json['delete_shop_order'] as bool?,
      editShopOrders: json['edit_shop_orders'] as bool?,
      editOthersShopOrders: json['edit_others_shop_orders'] as bool?,
      publishShopOrders: json['publish_shop_orders'] as bool?,
      readPrivateShopOrders: json['read_private_shop_orders'] as bool?,
      deleteShopOrders: json['delete_shop_orders'] as bool?,
      deletePrivateShopOrders: json['delete_private_shop_orders'] as bool?,
      deletePublishedShopOrders: json['delete_published_shop_orders'] as bool?,
      deleteOthersShopOrders: json['delete_others_shop_orders'] as bool?,
      editPrivateShopOrders: json['edit_private_shop_orders'] as bool?,
      editPublishedShopOrders: json['edit_published_shop_orders'] as bool?,
      manageShopOrderTerms: json['manage_shop_order_terms'] as bool?,
      editShopOrderTerms: json['edit_shop_order_terms'] as bool?,
      deleteShopOrderTerms: json['delete_shop_order_terms'] as bool?,
      assignShopOrderTerms: json['assign_shop_order_terms'] as bool?,
      editShopCoupon: json['edit_shop_coupon'] as bool?,
      readShopCoupon: json['read_shop_coupon'] as bool?,
      deleteShopCoupon: json['delete_shop_coupon'] as bool?,
      editShopCoupons: json['edit_shop_coupons'] as bool?,
      editOthersShopCoupons: json['edit_others_shop_coupons'] as bool?,
      publishShopCoupons: json['publish_shop_coupons'] as bool?,
      readPrivateShopCoupons: json['read_private_shop_coupons'] as bool?,
      deleteShopCoupons: json['delete_shop_coupons'] as bool?,
      deletePrivateShopCoupons: json['delete_private_shop_coupons'] as bool?,
      deletePublishedShopCoupons:
          json['delete_published_shop_coupons'] as bool?,
      deleteOthersShopCoupons: json['delete_others_shop_coupons'] as bool?,
      editPrivateShopCoupons: json['edit_private_shop_coupons'] as bool?,
      editPublishedShopCoupons: json['edit_published_shop_coupons'] as bool?,
      manageShopCouponTerms: json['manage_shop_coupon_terms'] as bool?,
      editShopCouponTerms: json['edit_shop_coupon_terms'] as bool?,
      deleteShopCouponTerms: json['delete_shop_coupon_terms'] as bool?,
      assignShopCouponTerms: json['assign_shop_coupon_terms'] as bool?,
      administrator: json['administrator'] as bool?,
    );

Map<String, dynamic> _$AllcapsToJson(Allcaps instance) => <String, dynamic>{
      'switch_themes': instance.switchThemes,
      'edit_themes': instance.editThemes,
      'activate_plugins': instance.activatePlugins,
      'edit_plugins': instance.editPlugins,
      'edit_users': instance.editUsers,
      'edit_files': instance.editFiles,
      'manage_options': instance.manageOptions,
      'moderate_comments': instance.moderateComments,
      'manage_categories': instance.manageCategories,
      'manage_links': instance.manageLinks,
      'upload_files': instance.uploadFiles,
      'import': instance.import,
      'unfiltered_html': instance.unfilteredHtml,
      'edit_posts': instance.editPosts,
      'edit_others_posts': instance.editOthersPosts,
      'edit_published_posts': instance.editPublishedPosts,
      'publish_posts': instance.publishPosts,
      'edit_pages': instance.editPages,
      'read': instance.read,
      'level_10': instance.level_10,
      'level_9': instance.level_9,
      'level_8': instance.level_8,
      'level_7': instance.level_7,
      'level_6': instance.level_6,
      'level_5': instance.level_5,
      'level_4': instance.level_4,
      'level_3': instance.level_3,
      'level_2': instance.level_2,
      'level_1': instance.level_1,
      'level_0': instance.level_0,
      'edit_others_pages': instance.editOthersPages,
      'edit_published_pages': instance.editPublishedPages,
      'publish_pages': instance.publishPages,
      'delete_pages': instance.deletePages,
      'delete_others_pages': instance.deleteOthersPages,
      'delete_published_pages': instance.deletePublishedPages,
      'delete_posts': instance.deletePosts,
      'delete_others_posts': instance.deleteOthersPosts,
      'delete_published_posts': instance.deletePublishedPosts,
      'delete_private_posts': instance.deletePrivatePosts,
      'edit_private_posts': instance.editPrivatePosts,
      'read_private_posts': instance.readPrivatePosts,
      'delete_private_pages': instance.deletePrivatePages,
      'edit_private_pages': instance.editPrivatePages,
      'read_private_pages': instance.readPrivatePages,
      'delete_users': instance.deleteUsers,
      'create_users': instance.createUsers,
      'unfiltered_upload': instance.unfilteredUpload,
      'edit_dashboard': instance.editDashboard,
      'update_plugins': instance.updatePlugins,
      'delete_plugins': instance.deletePlugins,
      'install_plugins': instance.installPlugins,
      'update_themes': instance.updateThemes,
      'install_themes': instance.installThemes,
      'update_core': instance.updateCore,
      'list_users': instance.listUsers,
      'remove_users': instance.removeUsers,
      'promote_users': instance.promoteUsers,
      'edit_theme_options': instance.editThemeOptions,
      'delete_themes': instance.deleteThemes,
      'export': instance.export,
      'manage_woocommerce': instance.manageWoocommerce,
      'view_woocommerce_reports': instance.viewWoocommerceReports,
      'edit_product': instance.editProduct,
      'read_product': instance.readProduct,
      'delete_product': instance.deleteProduct,
      'edit_products': instance.editProducts,
      'edit_others_products': instance.editOthersProducts,
      'publish_products': instance.publishProducts,
      'read_private_products': instance.readPrivateProducts,
      'delete_products': instance.deleteProducts,
      'delete_private_products': instance.deletePrivateProducts,
      'delete_published_products': instance.deletePublishedProducts,
      'delete_others_products': instance.deleteOthersProducts,
      'edit_private_products': instance.editPrivateProducts,
      'edit_published_products': instance.editPublishedProducts,
      'manage_product_terms': instance.manageProductTerms,
      'edit_product_terms': instance.editProductTerms,
      'delete_product_terms': instance.deleteProductTerms,
      'assign_product_terms': instance.assignProductTerms,
      'edit_shop_order': instance.editShopOrder,
      'read_shop_order': instance.readShopOrder,
      'delete_shop_order': instance.deleteShopOrder,
      'edit_shop_orders': instance.editShopOrders,
      'edit_others_shop_orders': instance.editOthersShopOrders,
      'publish_shop_orders': instance.publishShopOrders,
      'read_private_shop_orders': instance.readPrivateShopOrders,
      'delete_shop_orders': instance.deleteShopOrders,
      'delete_private_shop_orders': instance.deletePrivateShopOrders,
      'delete_published_shop_orders': instance.deletePublishedShopOrders,
      'delete_others_shop_orders': instance.deleteOthersShopOrders,
      'edit_private_shop_orders': instance.editPrivateShopOrders,
      'edit_published_shop_orders': instance.editPublishedShopOrders,
      'manage_shop_order_terms': instance.manageShopOrderTerms,
      'edit_shop_order_terms': instance.editShopOrderTerms,
      'delete_shop_order_terms': instance.deleteShopOrderTerms,
      'assign_shop_order_terms': instance.assignShopOrderTerms,
      'edit_shop_coupon': instance.editShopCoupon,
      'read_shop_coupon': instance.readShopCoupon,
      'delete_shop_coupon': instance.deleteShopCoupon,
      'edit_shop_coupons': instance.editShopCoupons,
      'edit_others_shop_coupons': instance.editOthersShopCoupons,
      'publish_shop_coupons': instance.publishShopCoupons,
      'read_private_shop_coupons': instance.readPrivateShopCoupons,
      'delete_shop_coupons': instance.deleteShopCoupons,
      'delete_private_shop_coupons': instance.deletePrivateShopCoupons,
      'delete_published_shop_coupons': instance.deletePublishedShopCoupons,
      'delete_others_shop_coupons': instance.deleteOthersShopCoupons,
      'edit_private_shop_coupons': instance.editPrivateShopCoupons,
      'edit_published_shop_coupons': instance.editPublishedShopCoupons,
      'manage_shop_coupon_terms': instance.manageShopCouponTerms,
      'edit_shop_coupon_terms': instance.editShopCouponTerms,
      'delete_shop_coupon_terms': instance.deleteShopCouponTerms,
      'assign_shop_coupon_terms': instance.assignShopCouponTerms,
      'administrator': instance.administrator,
    };

SiteData _$SiteDataFromJson(Map<String, dynamic> json) => SiteData(
      userId: json['user_id'] as int?,
      siteId: json['site_id'] as int?,
      path: json['path'] as String?,
      username: json['username'] as String?,
    );

Map<String, dynamic> _$SiteDataToJson(SiteData instance) => <String, dynamic>{
      'user_id': instance.userId,
      'site_id': instance.siteId,
      'path': instance.path,
      'username': instance.username,
    };
