import 'package:app/src/home/presentation/pages/home_page.dart';import 'package:app/src/main_index.dart'; import '../../../more/presentation/pages/more_page.dart';import '../bloc/nav_bar_bloc.dart';class NavigationBarPage extends BaseStatelessWidget {  NavigationBarPage({    Key? key,  }) : super(key: key);  @override  Widget build(BuildContext context) {    List<NavigatorModel> items = [      NavigatorModel(        title: strings.home,        screen: HomePage(),        icon: AppIcons.home,      ),      NavigatorModel(        title: strings.my_requests,        screen: HomePage(),        icon: AppIcons.request,      ),      NavigatorModel(        title: strings.attendance,        screen: HomePage(),        icon: AppIcons.activity,      ),      NavigatorModel(        title: strings.profile,        screen: MorePage(),        icon: AppIcons.profile,      ),    ];    return BlocProvider(      create: (context) => NavBarBloc(),      child: BlocBuilder<NavBarBloc, NavBarState>(        builder: (context, state) {          NavBarBloc bloc = NavBarBloc.get(context);          return Scaffold(            bottomNavigationBar: Container(              margin: 10.paddingAll,              clipBehavior: Clip.antiAlias,              decoration: Decorations.baseDecorationRadius(),              child: BottomNavigationBar(                onTap: (index) {                  bloc.changeIndex(index);                },                currentIndex: bloc.currentIndex,                type: BottomNavigationBarType.fixed,                showSelectedLabels: true,                selectedLabelStyle: whiteMediumStyle.copyWith(fontSize: 12),                unselectedLabelStyle: hintMediumStyle.copyWith(fontSize: 12, ),                elevation: 10,                selectedIconTheme: IconThemeData(                  color: whiteMediumStyle.color,                ),                selectedItemColor: whiteMediumStyle.color,                unselectedItemColor: whiteMediumStyle.color?.withOpacity(0.7),                backgroundColor: primaryColor,                items: items                    .map((e) => BottomNavigationBarItem(                  icon: AppIcon(                    icon: e.icon,                    size: 20,                    padding: 3.paddingBottom,                    color: whiteMediumStyle.color?.withOpacity(0.7),                  ),                  activeIcon: AppIcon(                    icon: e.icon,                    color: whiteMediumStyle.color,                    padding: 3.paddingBottom,                    size: 22,                  ),                  label: e.title,                ))                    .toList(),              ),            ),            body: items[bloc.currentIndex].screen,          );        },      ),    );  }}class NavigatorModel {  final String title;  final Widget screen;  final String icon;  NavigatorModel({    required this.title,    required this.screen,    required this.icon,  });}